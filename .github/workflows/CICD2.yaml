name: CI/CD Pipeline for k0s with httpd-alpine

on:
  push:
    branches:
      - asasas

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    # Definimos las variables estáticas aquí
    env:
      KUBE_NAMESPACE: default
      DEPLOYMENT_NAME: html-appQA
      CONTAINER_NAME: httpd-container

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # -- PASO NUEVO: Convertir el nombre del repositorio a minúsculas --
      # Este paso crea la variable de entorno IMAGE_NAME para los siguientes pasos.
      - name: Set lowercase image name
        run: echo "IMAGE_NAME=ghcr.io/$(echo '${{ github.repository }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      # -- Iniciar sesión en GitHub Container Registry --
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ secrets.USERGH }}
          password: ${{ secrets.GHCR_TOKEN }}

      # -- Construir y subir la imagen Docker --
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          # ✅ Se usa la nueva variable de entorno IMAGE_NAME que ya está en minúsculas
          tags: ${{ env.IMAGE_NAME }}:${{ github.sha }}
          labels: |
            org.opencontainers.image.source=${{ github.repositoryUrl }}
            org.opencontainers.image.revision=${{ github.sha }}

      # -- Configuración de Kubectl (sin cambios) --
      - name: Configure kubeconfig
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBE_CONFIG }}" > ~/.kube/config
          chmod 600 ~/.kube/config
          kubectl cluster-info
          kubectl get nodes

      # -- Desplegar en Kubernetes --
      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f deployment.yaml -f service.yaml
          
          # ✅ Se usa la nueva variable de entorno IMAGE_NAME aquí también
          kubectl set image deployment/$DEPLOYMENT_NAME $CONTAINER_NAME=${{ env.IMAGE_NAME }}:${{ github.sha }} --record
          
          echo "Waiting for deployment rollout to finish..."
          kubectl rollout status deployment/$DEPLOYMENT_NAME
          echo "Deployment successful! Pods list:"
          kubectl get pods -n $KUBE_NAMESPACE
